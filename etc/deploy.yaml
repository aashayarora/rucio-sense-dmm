apiVersion: apps/v1
kind: Deployment
metadata:
  name: dmm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dmm
  template:
    metadata:
      labels:
        app: dmm
    spec:
      containers:
      - name: postgres
        image: postgres
        resources:
          requests:
            memory: "1Gi"
            cpu: "1"
          limits:
            memory: "4Gi"
            cpu: "4"
        env:
        - name: POSTGRES_USER
          value: "dmm"
        - name: POSTGRES_PASSWORD
          value: "dmm"
      - name: dmm
        image: aaarora/dmm:latest
        resources:
          requests:
            memory: "4Gi"
            cpu: "4"
          limits:
            memory: "4Gi"
            cpu: "4"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: dmm-config
          mountPath: /opt/dmm/dmm.cfg
          subPath: dmm.cfg
        - name: sense-config
          mountPath: /root/.sense-o-auth.yaml
          subPath: .sense-o-auth.yaml
        - name: rucio-client-config
          mountPath: /opt/rucio/etc/rucio.cfg
          subPath: rucio.cfg
        - name: ca-volume
          mountPath: /etc/grid-security/certificates/
        - name: certs
          mountPath: /opt/certs/key.pem
          subPath: hostcert.key.pem
        - name: certs
          mountPath: /opt/certs/cert.pem
          subPath: hostcert.pem
      nodeSelector:
        nautilus.io/ipv6: "true"
      volumes:
      - name: dmm-config
        secret:
          secretName: dmm-config
      - name: rucio-client-config
        secret:
          secretName: rucio-client-config
      - name: sense-config
        secret:
          secretName: sense-config
      - name: certs
        secret:
          secretName: dmm-certs
          items:
            - key: hostcert.pem
              path: hostcert.pem
            - key: hostcert.key.pem
              path: hostcert.key.pem
      - name: ca-volume
        secret:
          defaultMode: 420
          secretName: rucio-server-rucio-ca-bundle
---
apiVersion: v1
kind: Service
metadata:
  name: dmm
spec:
  selector:
    app: dmm
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dmm
spec:
  ingressClassName: haproxy
  rules:
  - host: dmm-dev.nrp-nautilus.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dmm
            port:
              number: 8080
  tls:
  - hosts:
    - dmm-dev.nrp-nautilus.io
